FROM node:14.19.3-buster-slim AS front-builder

# 设置国内源
# RUN sed -i 's/deb.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list
# RUN sed -i 's/security.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list
# RUN apt-get clean

# 安装必要的工具
RUN apt-get update && apt-get install -y \
    findutils \
    sed

WORKDIR /app
# 拷贝前端依赖
COPY ./templates/package.json /app/package.json
# 拷贝前端文件
COPY ./templates/ /app
# 删除之前打包文件
RUN rm -rf /app/dist

# 代码修改操作
COPY ./.docker/code/MainLayout.vue /app/src/layouts/MainLayout.vue
# 使用 find 和 sed 替换文本
RUN find /app/src/i18n -type f -name "index.js" -exec sed -i 's/GreaterWMS/OnlineCargoWMS/g' {} +

# npm 修改国内源
# RUN npm config set registry https://registry.npmmirror.com
RUN npm install -g yarn --force
RUN npm install -g @quasar/cli --force

# yarn 修改国内源
# RUN yarn config set registry https://registry.npmmirror.com

# install all package
RUN yarn install
# 打包前端页面
# output: /app/dist/spa
RUN quasar build

# Use the official Nginx base image
FROM nginx:latest

# Remove the default Nginx configuration file
RUN rm -rf /etc/nginx/conf.d/default.conf
# copy new nginx configuration to nginx container
COPY ./.docker/nginx.conf /etc/nginx/conf.d/nginx.conf

# Copy the Quasar build output to the Nginx HTML directory
COPY --from=front-builder /app/dist/spa/ /usr/share/nginx/html
COPY ./static /usr/share/nginx/static
COPY ./static_new /user/share/nginx/static_new
COPY ./media /user/share/nginx/media

# Expose port 80 for Nginx
EXPOSE 80

# Start Nginx when the container launches
CMD ["nginx", "-g", "daemon off;"]


